/* Generated by the Nim Compiler v0.17.3 */
/*   (c) 2017 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var nimvm_6135 = false;
var nim_program_result = 0;
var globalRaiseHook_11605 = [null];
var localRaiseHook_11610 = [null];
var outOfMemHook_11613 = [null];
var objectID_49232 = [0];
var game = null;

function preloadGame_65003() {
	var F={procname:"clientGame.preloadGame",prev:framePtr,filename:"clientGame.nim",line:0};
	framePtr = F;
		F.line = 9;
		game.load.image(("background"), ("img/background-texture.png"));
	framePtr = F.prev;

	
}

function createGame_65035() {
	var F={procname:"clientGame.createGame",prev:framePtr,filename:"clientGame.nim",line:0};
	framePtr = F;
		F.line = 13;
		game.add.tileSprite((0), (0), (4000), (4000), ("background"));
	framePtr = F.prev;

	
}

function renderGame_65090() {
	var F={procname:"clientGame.renderGame",prev:framePtr,filename:"clientGame.nim",line:0};
	framePtr = F;
	framePtr = F.prev;

	
}

function updateGame_65092() {
	var F={procname:"clientGame.updateGame",prev:framePtr,filename:"clientGame.nim",line:0};
	framePtr = F;
		F.line = 19;
		console.log("Running");
	framePtr = F.prev;

	
}

function throw_64046(errorText_64048) {
	var F={procname:"utility.throw",prev:framePtr,filename:"/home/zeeqyu/programming/Dot/nim/shared/utility.nim",line:0};
	framePtr = F;
		F.line = 20;
		var error = errorText_64048;
		F.line = 21;
		throw error;
	framePtr = F.prev;

	
}

function onConnect_66013() {
	var F={procname:"client.onConnect",prev:framePtr,filename:"client.nim",line:0};
	framePtr = F;
		F.line = 18;
		console.log("Connected");
	framePtr = F.prev;

	
}

function onRandomMessage_66041(data_66043) {
	var F={procname:"client.onRandomMessage",prev:framePtr,filename:"client.nim",line:0};
	framePtr = F;
		F.line = 27;
		console.log(("Random stream: " + (data_66043.rand)));
	framePtr = F.prev;

	
}

function onSubscribeFail_66015(err_66017) {
	var F={procname:"client.onSubscribeFail",prev:framePtr,filename:"client.nim",line:0};
	framePtr = F;
		F.line = 21;
		console.log(("Failed to subscrixbo to the channel due to error: " + (err_66017)));
	framePtr = F.prev;

	
}

function onSampleChannel_66028(num_66030) {
	var F={procname:"client.onSampleChannel",prev:framePtr,filename:"client.nim",line:0};
	framePtr = F;
		F.line = 24;
		console.log(("Sample channel message: " + (num_66030)));
	framePtr = F.prev;

	
}

function colonanonymous__66061() {

		function inner_66069() {
			var result_66071 = null;

			var F={procname:":anonymous.inner",prev:framePtr,filename:"lib/js/jsffi.nim",line:0};
			framePtr = F;
			BeforeRet: do {
				F.line = 402;
				var a_66072 = null;
				F.line = 403;
				a_66072 = {};
				F.line = 422;
				result_66071 = a_66072;
				break BeforeRet;
			} while (false);
			framePtr = F.prev;

			return result_66071;

		}

	var F={procname:"client.:anonymous",prev:framePtr,filename:"client.nim",line:0};
	framePtr = F;
		F.line = 30;
		var gameFunctions_66074 = inner_66069();
		F.line = 31;
		gameFunctions_66074.preload = preloadGame_65003;
		F.line = 32;
		gameFunctions_66074.create = createGame_65035;
		F.line = 33;
		gameFunctions_66074.render = renderGame_65090;
		F.line = 34;
		gameFunctions_66074.update = updateGame_65092;
		F.line = 35;
		game = new Phaser.Game("100", "100", Phaser.AUTO, "", gameFunctions_66074);
		F.line = 37;
		var socket_66168 = socketCluster.connect();
		F.line = 38;
		socket_66168.on(("error"), (throw_64046));
		F.line = 39;
		socket_66168.on(("connect"), (onConnect_66013));
		F.line = 40;
		socket_66168.on(("rand"), (onRandomMessage_66041));
		F.line = 42;
		var sampleChannel_66254 = socket_66168.subscribe(("sample"));
		F.line = 43;
		sampleChannel_66254.on(("subscribeFail"), (onSubscribeFail_66015));
		F.line = 44;
		sampleChannel_66254.watch((onSampleChannel_66028));
	framePtr = F.prev;

	
}
window.onload = colonanonymous__66061;
